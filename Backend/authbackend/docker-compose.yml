version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: needstation-mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: needstation
      MYSQL_USER: needstation_user
      MYSQL_PASSWORD: needstation_password
      MYSQL_ROOT_PASSWORD: root_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - needstation-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: needstation-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - needstation-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 3s
      retries: 5

  # Spring Boot Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: needstation-backend
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      # Database Configuration
      DB_URL: jdbc:mysql://mysql:3306/needstation?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      DB_USERNAME: needstation_user
      DB_PASSWORD: needstation_password
      
      # Redis Configuration
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ""
      
      # JWT Configuration
      JWT_SECRET: "NeedStation_Production_JWT_Secret_Key_2025_Very_Long_Secret_For_Production_Use_At_Least_64_Characters_Long"
      JWT_EXPIRATION: 86400000
      JWT_REFRESH_EXPIRATION: 604800000
      
      # Application Configuration
      SERVER_PORT: 8080
      SPRING_PROFILES_ACTIVE: docker
      JPA_DDL_AUTO: update
      JPA_SHOW_SQL: "false"
      
      # External API Keys (set these in production)
      SENDGRID_API_KEY: ""
      SENDGRID_FROM_EMAIL: ""
      SENDGRID_FROM_NAME: ""
      TWILIO_ACCOUNT_SID: ""
      TWILIO_AUTH_TOKEN: ""
      TWILIO_PHONE_NUMBER: ""
      GOOGLE_OAUTH_CLIENT_ID: ""
      GOOGLE_OAUTH_CLIENT_SECRET: ""
      GOOGLE_TRANSLATE_API_KEY: ""
      FIREBASE_CONFIG_PATH: ""
      FIREBASE_STORAGE_BUCKET: ""
      BACKBLAZE_B2_KEY_ID: ""
      BACKBLAZE_B2_APPLICATION_KEY: ""
      BACKBLAZE_B2_BUCKET_NAME: ""
      OPENAI_API_KEY: ""
      
      # Mail Configuration
      MAIL_HOST: smtp.gmail.com
      MAIL_PORT: 587
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      MAIL_SMTP_AUTH: "true"
      MAIL_SMTP_STARTTLS: "true"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - needstation-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      timeout: 10s
      retries: 5
      start_period: 60s

  # Prometheus for Metrics (Optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: needstation-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - needstation-network
    profiles:
      - monitoring

  # Grafana for Dashboards (Optional)
  grafana:
    image: grafana/grafana:latest
    container_name: needstation-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - needstation-network
    profiles:
      - monitoring

volumes:
  mysql_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  needstation-network:
    driver: bridge
