# Application name
spring.application.name=authbackend

# MySQL DataSource Properties
spring.datasource.url=jdbc:mysql://localhost:3306/NeedStation
spring.datasource.username=root
spring.datasource.password=shiningLight42
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA Properties
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.open-in-view=false

# CORS Configuration (Spring Boot handles this with your CorsFilter in SecurityConfig)
# CORS Configuration
spring.web.cors.allowed-origins=*
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true
spring.web.cors.max-age=3600

#Google Maps API Key
google.maps.api.key=AIzaSyBwNUkrw0WOChZUk6PVTMB-4F5eV0frh1o
google.translate.api-key=AIzaSyDaEJ4vo3cRDG90bsEVw2C98QNQlP5Ai6o


# Twilio SMS API configuration
twilio.account_sid=ACc52720e2c93cc37da72f1f3def60bd2e
twilio.auth_token=32ed4fb9718d60f0cfe6207ed0604cef
twilio.phone_number=+918357028350
twilio.verify_service_sid=VA12700010460b149t741d0ce1a7584

# Free OTP API Configuration
free-otp.base-url=http://localhost:3030
free-otp.default-source=ReceiveSmsFree
free-otp.timeout-seconds=60
use-free-otp=true

# OTP Security Configuration
otp.encryption.key=NeedStation_OTP_Secret_Key_2025
otp.validation.strict=true

# Gemini AI Configuration - DISABLED
# Using rule-based chatbot instead of expensive API calls

# Activate SMS service profile
spring.profiles.active=sms

# Primary SMS provider configuration (2Factor is now the preferred provider)
sms.enabled=true
sms.default-provider=2factor

# Comment out or remove the GetOTP API Configuration as we're using 2Factor
#otp.api.key=ZHAnB2zxQ7ywRghIt4WXEuirjLlJp69v
#otp.api.token=149reo5dzb2pwv6s7cilq8xfjtmh0nu3
#otp.api.endpoint=https://otp.dev/api/verify/

server.port=8080
logging.level.org.springframework.web.client.RestTemplate=DEBUG
logging.level.com.example.authbackend.service.OtpService=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.com.example.authbackend.service.ChatbotService=DEBUG
# Using default LOWER_CAMEL_CASE naming strategy to match frontend
# spring.jackson.property-naming-strategy=SNAKE_CASE

# Email Configuration for Contact Form
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=ashwinrmcf@gmail.com
spring.mail.password=yvvx arkl hoiy yltd
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com
contact.support.email=needstation3@gmail.com
contact.method=smtp

# File Upload Configuration
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB

# Google OAuth2 Configuration
google.oauth.client-id=371371610049-bh10hbvhbtij5qa8r3f0srjdeseisqr0.apps.googleusercontent.com
google.oauth.client-secret=YOUR_GOOGLE_CLIENT_SECRET
google.oauth.redirect-uri=http://localhost:8080/auth/google/callback

# Backblaze B2 Configuration
backblaze.application-key-id=0061609d5c01bcb0000000001
backblaze.application-key=K006gofVXRIu/CgGMw39FDZkMAPHkBE
backblaze.bucket-name=NeedStation
backblaze.bucket-id=8146f0590dd5fc20918b0c1b

# SendGrid Email Configuration
sendgrid.api.key=SENDGRID_API_KEY_PLACEHOLDER
sendgrid.from.email=needstation3@gmail.com
sendgrid.from.name=NeedStation Support

# SMS Provider API Keys
# Termii SMS Configuration
termii.api.key=TERMII_API_KEY_PLACEHOLDER
termii.sender.id=NeedStation

# Fast2SMS Configuration  
fast2sms.api.key=FAST2SMS_API_KEY_PLACEHOLDER

# 2Factor SMS Configuration
twofactor.api.key=TWOFACTOR_API_KEY_PLACEHOLDER

# Webhook Email Configuration
webhook.email.url=WEBHOOK_EMAIL_URL_PLACEHOLDER
webhook.email.api.key=WEBHOOK_EMAIL_API_KEY_PLACEHOLDER
