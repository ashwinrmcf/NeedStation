# Application name
spring.application.name=authbackend

# MySQL DataSource Properties - Use environment variables
spring.datasource.url=${DB_URL:jdbc:mysql://localhost:3306/NeedStation}
spring.datasource.username=${DB_USERNAME:root}
spring.datasource.password=${DB_PASSWORD:}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Connection Pool Configuration (HikariCP)
spring.datasource.hikari.maximum-pool-size=${DB_POOL_SIZE:20}
spring.datasource.hikari.minimum-idle=${DB_MIN_IDLE:5}
spring.datasource.hikari.idle-timeout=${DB_IDLE_TIMEOUT:300000}
spring.datasource.hikari.pool-name=NeedStationHikariCP
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.register-mbeans=true

# JPA Properties
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.show-sql=${SHOW_SQL:false}
spring.jpa.properties.hibernate.format_sql=${FORMAT_SQL:false}
spring.jpa.open-in-view=false

# Enhanced Hibernate Configuration for Schema Updates
spring.jpa.properties.hibernate.hbm2ddl.auto=none
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# MySQL Configuration for better compatibility
spring.jpa.properties.hibernate.connection.characterEncoding=utf8
spring.jpa.properties.hibernate.connection.useUnicode=true
spring.jpa.properties.hibernate.connection.zeroDateTimeBehavior=convertToNull
spring.jpa.properties.hibernate.connection.serverTimezone=UTC

# Reduced logging for production
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN
logging.level.org.hibernate.engine.jdbc.spi.SqlExceptionHelper=WARN

# Redis Configuration - DISABLED TEMPORARILY
#spring.data.redis.host=${REDIS_HOST:localhost}
#spring.data.redis.port=${REDIS_PORT:6379}
#spring.data.redis.password=${REDIS_PASSWORD:}
#spring.data.redis.timeout=2000ms
#spring.data.redis.jedis.pool.max-active=8
#spring.data.redis.jedis.pool.max-idle=8
#spring.data.redis.jedis.pool.min-idle=0
#spring.cache.type=redis
#spring.cache.redis.time-to-live=600000
spring.cache.type=none

# JWT Configuration
jwt.secret=${JWT_SECRET:NeedStation_JWT_Secret_Key_2025_Very_Long_Secret_For_Production_Use_At_Least_64_Characters}
jwt.expiration=${JWT_EXPIRATION:86400000}
jwt.refresh.expiration=${JWT_REFRESH_EXPIRATION:604800000}

# CORS Configuration
spring.web.cors.allowed-origins=${CORS_ORIGINS:http://localhost:3000,http://localhost:5173}
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true
spring.web.cors.max-age=3600
management.endpoints.web.cors.allowed-origins=*
management.endpoints.web.cors.allowed-methods=GET,POST

# External API Keys - Use environment variables
google.maps.api.key=${GOOGLE_MAPS_API_KEY:}
google.translate.api-key=${GOOGLE_TRANSLATE_API_KEY:}

# Twilio SMS API configuration
twilio.account_sid=${TWILIO_ACCOUNT_SID:}
twilio.auth_token=${TWILIO_AUTH_TOKEN:}
twilio.phone_number=${TWILIO_PHONE_NUMBER:}
twilio.verify_service_sid=${TWILIO_VERIFY_SERVICE_SID:}

# Free OTP API Configuration
free-otp.base-url=${FREE_OTP_BASE_URL:http://localhost:3030}
free-otp.default-source=${FREE_OTP_SOURCE:ReceiveSmsFree}
free-otp.timeout-seconds=${FREE_OTP_TIMEOUT:60}
use-free-otp=${USE_FREE_OTP:false}

# OTP Security Configuration
otp.encryption.key=${OTP_ENCRYPTION_KEY:NeedStation_OTP_Secret_Key_2025}
otp.validation.strict=${OTP_VALIDATION_STRICT:true}

# SMS Configuration
spring.profiles.active=${ACTIVE_PROFILES:default}
sms.enabled=${SMS_ENABLED:true}
sms.default-provider=${SMS_DEFAULT_PROVIDER:2factor}
sms.2factor.api-key=${SMS_2FACTOR_API_KEY:}
sms.termii.api-key=${SMS_TERMII_API_KEY:}
sms.fast2sms.api-key=${SMS_FAST2SMS_API_KEY:}

# Server Configuration
server.port=${SERVER_PORT:8080}
server.error.include-message=never
server.error.include-binding-errors=never
server.servlet.context-path=/

# Logging Configuration
logging.level.org.springframework.web.client.RestTemplate=${LOG_LEVEL_REST:WARN}
logging.level.com.example.authbackend.service.OtpService=${LOG_LEVEL_OTP:INFO}
logging.level.org.springframework.security=${LOG_LEVEL_SECURITY:WARN}
logging.level.com.example.authbackend.service.ChatbotService=${LOG_LEVEL_CHATBOT:INFO}
logging.level.com.example.authbackend=${LOG_LEVEL_APP:INFO}
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
management.endpoint.loggers.enabled=true

# Email Configuration - Use environment variables
spring.mail.host=${MAIL_HOST:smtp.gmail.com}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME:}
spring.mail.password=${MAIL_PASSWORD:}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.ssl.trust=${MAIL_HOST:smtp.gmail.com}
spring.mail.properties.mail.debug=${MAIL_DEBUG:false}

# SendGrid Configuration
sendgrid.api.key=${SENDGRID_API_KEY:}
contact.support.email=${SUPPORT_EMAIL:support@needstation.in}
contact.from.email=${FROM_EMAIL:noreply@needstation.in}
contact.method=${CONTACT_METHOD:smtp}

# File Upload Configuration
spring.servlet.multipart.max-file-size=${MAX_FILE_SIZE:10MB}
spring.servlet.multipart.max-request-size=${MAX_REQUEST_SIZE:10MB}

# Google OAuth2 Configuration
google.oauth.client-id=${GOOGLE_OAUTH_CLIENT_ID:}
google.oauth.client-secret=${GOOGLE_OAUTH_CLIENT_SECRET:}
google.oauth.redirect-uri=${GOOGLE_OAUTH_REDIRECT_URI:http://localhost:8080/auth/google/callback}

# Backblaze B2 Configuration
backblaze.application-key-id=${BACKBLAZE_KEY_ID:}
backblaze.application-key=${BACKBLAZE_KEY:}
backblaze.bucket-name=${BACKBLAZE_BUCKET_NAME:NeedStation}
backblaze.bucket-id=${BACKBLAZE_BUCKET_ID:}

# Firebase Configuration
firebase.project.id=${FIREBASE_PROJECT_ID:}
firebase.service.account.path=${FIREBASE_SERVICE_ACCOUNT_PATH:}
firebase.function.url=${FIREBASE_FUNCTION_URL:}

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus,env,loggers
management.endpoints.web.base-path=/actuator
management.endpoint.health.show-details=when-authorized
management.endpoint.health.show-components=always
management.endpoint.metrics.enabled=true
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true

# Health Check Configuration
management.health.redis.enabled=false
management.health.db.enabled=true
management.health.diskspace.enabled=true

# Info Endpoint Configuration
management.info.env.enabled=true
management.info.java.enabled=true
management.info.os.enabled=true

# Jackson Configuration
spring.jackson.default-property-inclusion=NON_NULL
spring.jackson.serialization.write-dates-as-timestamps=false

# Validation Configuration
spring.mvc.throw-exception-if-no-handler-found=true
spring.web.resources.add-mappings=false

# Razorpay Payment Gateway Configuration
razorpay.key.id=${RAZORPAY_KEY_ID:}
razorpay.key.secret=${RAZORPAY_KEY_SECRET:}
